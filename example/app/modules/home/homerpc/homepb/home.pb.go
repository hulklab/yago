// Code generated by protoc-gen-go. DO NOT EDIT.
// source: home.proto

/*
Package app_homepb is a generated protocol buffer package.

It is generated from these files:
	home.proto

It has these top-level messages:
	HelloRequest
	HelloReply
	HelloStreamReply
*/
package app_homepb

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloReply struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type HelloStreamReply struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *HelloStreamReply) Reset()                    { *m = HelloStreamReply{} }
func (m *HelloStreamReply) String() string            { return proto.CompactTextString(m) }
func (*HelloStreamReply) ProtoMessage()               {}
func (*HelloStreamReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HelloStreamReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "app.homepb.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "app.homepb.HelloReply")
	proto.RegisterType((*HelloStreamReply)(nil), "app.homepb.HelloStreamReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Home service

type HomeClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	HelloStream(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Home_HelloStreamClient, error)
}

type homeClient struct {
	cc *grpc.ClientConn
}

func NewHomeClient(cc *grpc.ClientConn) HomeClient {
	return &homeClient{cc}
}

func (c *homeClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := grpc.Invoke(ctx, "/app.homepb.Home/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeClient) HelloStream(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Home_HelloStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Home_serviceDesc.Streams[0], c.cc, "/app.homepb.Home/HelloStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &homeHelloStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Home_HelloStreamClient interface {
	Recv() (*HelloStreamReply, error)
	grpc.ClientStream
}

type homeHelloStreamClient struct {
	grpc.ClientStream
}

func (x *homeHelloStreamClient) Recv() (*HelloStreamReply, error) {
	m := new(HelloStreamReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Home service

type HomeServer interface {
	Hello(context.Context, *HelloRequest) (*HelloReply, error)
	HelloStream(*HelloRequest, Home_HelloStreamServer) error
}

func RegisterHomeServer(s *grpc.Server, srv HomeServer) {
	s.RegisterService(&_Home_serviceDesc, srv)
}

func _Home_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.homepb.Home/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Home_HelloStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HelloRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HomeServer).HelloStream(m, &homeHelloStreamServer{stream})
}

type Home_HelloStreamServer interface {
	Send(*HelloStreamReply) error
	grpc.ServerStream
}

type homeHelloStreamServer struct {
	grpc.ServerStream
}

func (x *homeHelloStreamServer) Send(m *HelloStreamReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Home_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.homepb.Home",
	HandlerType: (*HomeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Home_Hello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HelloStream",
			Handler:       _Home_HelloStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "home.proto",
}

func init() { proto.RegisterFile("home.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc8, 0xcf, 0x4d,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4a, 0x2c, 0x28, 0xd0, 0x03, 0xf1, 0x0b, 0x92,
	0x94, 0x94, 0xb8, 0x78, 0x3c, 0x52, 0x73, 0x72, 0xf2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0,
	0x6c, 0x25, 0x05, 0x2e, 0x2e, 0xa8, 0x9a, 0x82, 0x9c, 0x4a, 0x90, 0x8a, 0x94, 0xc4, 0x92, 0x44,
	0x98, 0x0a, 0x10, 0x5b, 0x49, 0x8d, 0x4b, 0x00, 0xac, 0x22, 0xb8, 0xa4, 0x28, 0x35, 0x31, 0x17,
	0xa7, 0x3a, 0xa3, 0x3e, 0x46, 0x2e, 0x16, 0x8f, 0xfc, 0xdc, 0x54, 0x21, 0x6b, 0x2e, 0x56, 0xb0,
	0x06, 0x21, 0x09, 0x3d, 0x84, 0x63, 0xf4, 0x90, 0x5d, 0x22, 0x25, 0x86, 0x45, 0xa6, 0x20, 0xa7,
	0x52, 0x89, 0x41, 0xc8, 0x93, 0x8b, 0x1b, 0xc9, 0x36, 0x3c, 0x46, 0xc8, 0x60, 0xc8, 0x20, 0x39,
	0x50, 0x89, 0xc1, 0x80, 0x31, 0x89, 0x0d, 0x1c, 0x22, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x9d, 0x19, 0x8c, 0xa4, 0x1f, 0x01, 0x00, 0x00,
}
